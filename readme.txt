Проект - игра "Морской бой".
Реализовано два типа игры: 2 игрока и игра с компьютером.
Подготовка к бою: после выбора типа игры необходимо расставить корабли (либо самостоятельно, либо рандомно сгенерировав расстановку) и указать свое имя. 
Когда первый игрок закончил все приготовления, он нажимает кнопку "Готов!".
Затем второй игрок (если выбран тип игры - 2 игрока) проделывает аналогичные действия.
При расстановке корабля клетки вокруг него блокируются (так как по правилам корабли могут стоять минимум через клетку). Если текущий корабль, который игрок пытается поставить на поле, не подходит под место, выбранное игроком, то корабль размещен не будет, а игроку высветится соответсвующее сообщение.
При генерации рандомной расстановки первым делом генерируется место для 4-палубного корабля, затем для 3-палубных и тд. Все правила расстановки кораблей сохраняются.
Бой: игроки ходят по очереди до очередного промаха. Если при очередном ходе игрок попал по кораблю, то он совершает следующий выстрел. И только после промоха ход переходит к другому игроку.
Бой проходит до тех пор, пока один из игроков не уничтожит все корабли противника. Также в процессе боя можно сохранить данные игры в текстовый файл, чтобы продолжить битву позднее.
Если все корабли одного из игроков уничтожены, то открывается окно, в котором написана информация о победителе. 
Из этого окна игроки могут: вернуться на поле боя, чтобы посмотреть на расстановку кораблей, которые не были добиты; сыграть еще раз, нажав на кнопку "реванш"; закрыть приложение.
Если игроки решили посмотреть на расстановку кораблей после окончания битвы, то после просмотра они тоже могут либо закрыть приложение, либо сыграть еще раз.
Реализация игры с ботом: бот играет честно! Он ходит по оптимальной стратегии, его атака разделена на 3 части. В каждой части атака идет по конкретным координатам. Если бот попал по кораблю, то он обязательно его добьет, и только потом перейдет к другим клеткам.
Требования:
Приложение имеет сборку dll: seaBattle_Library.
В программе разработаны классы: класс Zone-Зона (хранит матрицу кораблей, матрицу ударов и имя игрока), класс Ship-Корабль (хранит данные о корабле: кол-во палуб, массив из вектор-координат, массив попаданий по кораблю), класс AutomaticLocation-автоматическая рассановка (позволяет генерировать рандомную расстаноку), вспомогательный класс MyVector (хранит вектор).
o	Наличие собственного хранилища данных (сущностей) в виде массива или коллекции (лучше типизированной); - нет
o	Использование интерфейсов и/или абстрактных классов при проектировании иерархии классов; - нет
o	Использование механизма исключений для работы с нештатными ситуациями; - нет
o	Предпочтительно использовать свойства (возможно, автоматические), а не поля для хранения данных; - использование в классах Ship, AutomaticLocation
o	Переопределение операций. - нет
•	Использование конструкций LINQ для работы с данными. - нет
•	Работа с файлами, использование стандартных диалогов для их открытия. - чтение в MainWindow.xaml.cs, запись в BattleZone.xaml.cs. Работа с файлами используется для сохранения игры с целью её продолжения через какое-то время.

В папке saves есть несколько сохранений предыдущих битв. Именно туда для удобства рекомендуется сохранять свои незаконченные игры.
Структура файла с сохранением: в первой строке записан 0 или 1 (если игра идет против бота, то 1). Во второй строке записано имя игрока. В следующих 10 строках записаны корабли: первое число - кол-во палуб, второе и третье - координата самого начала корабля (то есть координата самой левой верхней палубы), четвертое - ориентация корабля (1-вертикально, 0-горизонтально).
Далее записана матрица ударов (10*10) по полю этих кораблей. Далее все тоже самое для второга игрока: имя, корабли и матрица ударов. Последняя строка файла - это текущий шаг игры (если это число четное, то ходит игрок 1, иначе - игрок 2).
В главном окне программы можно выбрать тип игры: 2 игрока, против компьютера или продолжить незавершенный поединок.
Если выбран режим 2 игрока, то открывается окно с подготовкой первого игрока к битве. В этом окне игрок может расставить корабли и указать свое имя. При нажатии кнопки "Готов!" окно закрывается, а затем открывается окно для другого игрока, который должен проделать аналогичные действия.
Когда второй игрок нажал кнопку "Готов!", открывается главное меню, в котором необходимо нажать кнопку "Старт!". При нажатии этой кнопки открывается окно с битвой. В окне отображается поля обоих игроков, их имена и имя игрока, который делает текущий ход.
Из этого окна игроки могут в любой момент сохранить игру, закрыть приложение или перейти в главное меню. Когда бой закончен, высвечивается окно, в котором написано имя победителя. Отсюда можно либо вернуться на поле битвы и посмотреть на расположение кораблей (которое будет автоматически показано при нажатии на кнопку "Посмотреть поле"), сыграть еще раз или закрыть приложение.

Если выбран режим игры против компьютера, то основное отличие будет только в том, что игрок будет видеть расположение своих кораблей.

Если выбран режим "продолжить игру", то пользователю откроется каталог saves, из которого необходимо будет выбрать файл с игрой, которую он хочет продолжить. При этом все сделанные ранее ходы сразу же отобразятся на поле битвы и текущий ход у того, на чьем ходу игра остановилась.